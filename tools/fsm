#!/usr/bin/python
#
# Tool for processing Finite State Machine definition files.
#
# Copyright (C) 2013 Reece H. Dunn
#
# This file is part of cainteoir-engine.
#
# cainteoir-engine is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cainteoir-engine is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cainteoir-engine.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import yaml

def read_fsm(filename):
	with open(filename) as f:
		return yaml.load(f)

fsm = read_fsm(sys.argv[2])

if sys.argv[1] == 'dot':
	print 'digraph "%s" {' % fsm['title']
	print 'rankdir=LR;'
	for state, info in sorted(fsm['states'].items()):
		if info['terminal']:
			print '%s [shape=doublecircle, tooltip="%s"]' % (state, info['name'])
		else:
			print '%s [shape=circle, tooltip="%s"]' % (state, info['name'])
	for state, transitions in sorted(fsm['transitions'].items()):
		for transition, classes in sorted(transitions.items()):
			print '%s -> %s [label="%s", color=blue]' % (state, transition, ','.join(classes))
	print '}'
